root = true
[*]
end_of_line = crlf
insert_final_newline = true

[*.bat]
end_of_line = lf

# Code files
[*.{cs,json,cshtml,ts}]
indent_style = space
indent_size = 4

# Project files
[*.{csproj,props}]
indent_style = space
indent_size = 2

# Roslyn Analyzers
[*.cs]

resharper_csharp_place_attribute_on_same_line = false
resharper_csharp_wrap_extends_list_style = chop_if_long

vsspell_section_id = main
vsspell_ignored_words_main = File:dictionary.dic

dotnet_diagnostic.IDE1006.severity = none # IDE1006: Naming Styles

dotnet_diagnostic.CA1069.severity = warning # Enums values should not be duplicated
dotnet_diagnostic.CA1806.severity = warning # Do not ignore method results
dotnet_diagnostic.CA1816.severity = warning # Dispose methods should call SuppressFinalize
dotnet_diagnostic.CA1822.severity = warning # Member that does not access instance data can be marked as static
dotnet_diagnostic.CA1825.severity = warning # Avoid zero-length array allocations
dotnet_diagnostic.CA2016.severity = warning # Forward the 'CancellationToken' parameter to methods
dotnet_diagnostic.CA2211.severity = warning # Non-constant fields should not be visible
dotnet_diagnostic.CA2231.severity = warning # Overload operator equals on overriding value type Equals
dotnet_diagnostic.CA2254.severity = warning # Template should be a static expression

dotnet_diagnostic.CA1860.severity = none    #  Prefer comparing 'Length' to 0 rather than using 'Any()'

dotnet_diagnostic.QW0001.severity = none    # Use a testable Time Provider

dotnet_diagnostic.S100.severity  = none     # Properties should be named in PascalCase
dotnet_diagnostic.S101.severity  = none     # Types should be named in PascalCase
dotnet_diagnostic.S1694.severity = none     # Convert this 'abstract' class to a concrete type with a protected constructor.
dotnet_diagnostic.S3376.severity = none     # Attribute, EventArgs, and Exception type names should end with the type being extended

dotnet_diagnostic.S107.severity  = warning  # Methods should not have too many parameters
dotnet_diagnostic.S1144.severity = warning  # Unused private types or members should be removed
dotnet_diagnostic.S1185.severity = warning  # Overriding members should do more than simply call the same member in the base class
dotnet_diagnostic.S1479.severity = warning  # Consider reworking this 'switch' to reduce the number of 'case's to at most 30
dotnet_diagnostic.S1858.severity = warning  # "ToString()" calls should not be redundant
dotnet_diagnostic.S2302.severity = warning  # "nameof" should be used
dotnet_diagnostic.S2342.severity = warning  # Rename this enumeration to match naming convention
dotnet_diagnostic.S2436.severity = warning  # Types and methods should not have too many generic parameters
dotnet_diagnostic.S3215.severity = warning  # interface instances should not be cast to concrete types
dotnet_diagnostic.S3218.severity = warning  # Rename this property to not shadow the outer class' member with the same name																														   
dotnet_diagnostic.S3257.severity = warning  # Declarations and initializations should be as concise as possible
dotnet_diagnostic.S3776.severity = warning  # Cognitive Complexity of methods should not be too high
dotnet_diagnostic.S3925.severity = warning  # "ISerializable" should be implemented correctly
dotnet_diagnostic.S4457.severity = warning  # Parameter validation in "async"/"await" methods should be wrapped
dotnet_diagnostic.S6354.severity = warning  # Use a testable Time Provider

dotnet_diagnostic.SA0001.severity = none # XML comment analysis disabled.
dotnet_diagnostic.SA1001.severity = none # Commas should not be preceded by whitespace.
dotnet_diagnostic.SA1101.severity = none # Prefix local calls with this.
dotnet_diagnostic.SA1127.severity = none # Generic type constraints should be on their own line.
dotnet_diagnostic.SA1128.severity = none # Constructor initializes should be on their own line.
dotnet_diagnostic.SA1200.severity = none # using directive is placed outside of a namespace element.
dotnet_diagnostic.SA1201.severity = none # Order of different members.
dotnet_diagnostic.SA1202.severity = none # Sort members based on visibillity.
dotnet_diagnostic.SA1203.severity = none # Constants before non-constants.
dotnet_diagnostic.SA1204.severity = none # Sort members based on static/instance.
dotnet_diagnostic.SA1208.severity = none # System using directives must be placed before other using directives.
dotnet_diagnostic.SA1214.severity = none # Sort readonly fields before non-readonly fields.
dotnet_diagnostic.SA1300.severity = none # Enum members should not start with lower-case character.
dotnet_diagnostic.SA1302.severity = none # Interface names should start with an I.
dotnet_diagnostic.SA1304.severity = none # None-private fields should begin with upper-case character.
dotnet_diagnostic.SA1306.severity = none # Fields should begin with lower-case character.
dotnet_diagnostic.SA1307.severity = none # Fields should begin with upper-case character.
dotnet_diagnostic.SA1308.severity = none # Fields should begin with 'm_' prefix.
dotnet_diagnostic.SA1309.severity = none # Fields should begin with underscore.
dotnet_diagnostic.SA1310.severity = none # Fields should not contain underscores.
dotnet_diagnostic.SA1311.severity = none # Static read-only fields should begin with upper-case character.
dotnet_diagnostic.SA1313.severity = none # Parameters should begin with lower-case letter. (Due to FP on _)
dotnet_diagnostic.SA1402.severity = none # File may only contain a single type
dotnet_diagnostic.SA1502.severity = none # Element should not be on single line.
dotnet_diagnostic.SA1503.severity = none # Braces should not be omitted.
dotnet_diagnostic.SA1513.severity = none # Closing brace should be followed by an empty line.
dotnet_diagnostic.SA1519.severity = none # Braces should not be omitted from multi-line childe statement.
dotnet_diagnostic.SA1520.severity = none # Use braces consistently.
dotnet_diagnostic.SA1600.severity = none # Elements should be documented.
dotnet_diagnostic.SA1601.severity = none # Partial elements should be documented.
dotnet_diagnostic.SA1602.severity = none # Enumerations should be documented.
dotnet_diagnostic.SA1611.severity = none # The documentation for parameter x is missing.
dotnet_diagnostic.SA1615.severity = none # The documentation return value.
dotnet_diagnostic.SA1618.severity = none # The documentation type parameter.
dotnet_diagnostic.SA1623.severity = none # The property's documentation summary text should begin with: 'Gets'.
dotnet_diagnostic.SA1633.severity = none # The file header is missing or not located at the top of the file.
dotnet_diagnostic.SA1636.severity = none # The file header should contain match copyright from settings.
dotnet_diagnostic.SA1637.severity = none # The file header should contain file name.
dotnet_diagnostic.SA1640.severity = none # The copyright tag should contain a non-empty company attribute.
dotnet_diagnostic.SA1649.severity = none # File name should match first type name.

dotnet_diagnostic.SA1401.severity = suggestion # Fields should be private.
dotnet_diagnostic.SA1407.severity = suggestion # Arithmetic expressions should declare precedence.
dotnet_diagnostic.SA1501.severity = suggestion # Statement should not be on single line.
dotnet_diagnostic.SA1512.severity = suggestion # Single-line comment should be followed by blank line.
dotnet_diagnostic.SA1515.severity = suggestion # Single-line comment should be preceded by blank line.

dotnet_diagnostic.SYSLIB1045.severity = warning # Use 'GeneratedRegexAttribute' to generate the regular expression implementation at compile-time

dotnet_diagnostic.VSSpell001.severity = suggestion # Correct spelling. 
dotnet_diagnostic.MABuilders1001.severity = none # MongoDB query hints (not actually a diagnostic)

dotnet_diagnostic.AsyncFixer01.severity = suggestion # Use of async/await is desired in some cases in order to include the method in exception stack trace.

[*.cs]
#### Naming styles ####

# Naming rules

dotnet_naming_rule.private_or_internal_field_should_be__prefix.severity = suggestion
dotnet_naming_rule.private_or_internal_field_should_be__prefix.symbols = private_or_internal_field
dotnet_naming_rule.private_or_internal_field_should_be__prefix.style = _prefix

# Symbol specifications

dotnet_naming_symbols.private_or_internal_field.applicable_kinds = field
dotnet_naming_symbols.private_or_internal_field.applicable_accessibilities = internal, private, private_protected
dotnet_naming_symbols.private_or_internal_field.required_modifiers = 

# Naming styles

dotnet_naming_style._prefix.required_prefix = _
dotnet_naming_style._prefix.required_suffix = 
dotnet_naming_style._prefix.word_separator = 
dotnet_naming_style._prefix.capitalization = camel_case
csharp_using_directive_placement = outside_namespace:silent
csharp_prefer_simple_using_statement = true:suggestion
csharp_prefer_braces = true:silent
csharp_style_namespace_declarations = file_scoped:silent
csharp_style_prefer_method_group_conversion = true:silent
csharp_style_prefer_top_level_statements = true:silent
csharp_style_prefer_primary_constructors = true:suggestion
csharp_style_expression_bodied_methods = false:silent
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_operators = false:silent
csharp_style_expression_bodied_properties = true:silent
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_accessors = true:silent
csharp_style_expression_bodied_lambdas = true:silent
csharp_style_expression_bodied_local_functions = false:silent
csharp_indent_labels = one_less_than_current

[*.{cs,vb}]
#### Naming styles ####

# Naming rules

dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

# Symbol specifications

dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers = 

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers = 

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers = 

# Naming styles

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix = 
dotnet_naming_style.begins_with_i.word_separator = 
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.pascal_case.required_prefix = 
dotnet_naming_style.pascal_case.required_suffix = 
dotnet_naming_style.pascal_case.word_separator = 
dotnet_naming_style.pascal_case.capitalization = pascal_case
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_prefer_simplified_boolean_expressions = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_operator_placement_when_wrapping = beginning_of_line
tab_width = 4
indent_size = 4
dotnet_style_prefer_inferred_tuple_names = true:suggestion
